- name: Backend setup
  hosts: all
  become: yes
  tasks:
    - name: disable nodejs present version
      ansible.builtin.shell: dnf module disable nodejs -y
    - name: enable nodejs current version 
      ansible.builtin.shell: dnf module enable nodejs:20 -y
    - name: install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present
    - name: remove directory
      ansible.builtin.file:
        path: /app
        state: absent
    - name: create directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: add app user
      ansible.builtin.user:
        name: sri
    - name: copy backend service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/backend.service
    - name: download backend code and unzip it
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: yes
    - name: download dependencies
      ansible.builtin.shell: npm install
        args: 
          chdir: /app
    - name: enable and restart backend service
      ansible.builtin.systemd:
        name: backend
        enabled: yes
        state: restarted
        daemon-reload: yes
    - name: install mysql setup
      ansible.builtin.dnf:
        name: mysql
        state: present
    - name: connecting to the database
      ansible.builtin.shell: mysql -h mysql.sriharsha.shop -uroot -pSriharsha@1 < /app/schema/backend.sql